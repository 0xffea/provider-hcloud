---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: servers.hcloud.crossplane.io
spec:
  group: hcloud.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - hcloud
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Server is the Schema for the Servers API. Provides an Hetzner
          Cloud server resource. This can be used to create, modify, and delete servers.
          Servers also support provisioning.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServerSpec defines the desired state of Server
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  allowDeprecatedImages:
                    description: 'Enable the use of deprecated images (default: false).
                      Note Deprecated images will be removed after three months. Using
                      them is then no longer possible.'
                    type: boolean
                  backups:
                    description: Enable or disable backups.
                    type: boolean
                  datacenter:
                    description: The datacenter name to create the server in. nbg1-dc3,
                      fsn1-dc14, hel1-dc2, ash-dc1 or hil-dc1
                    type: string
                  deleteProtection:
                    description: Enable or disable delete protection (Needs to be
                      the same as rebuild_protection).
                    type: boolean
                  firewallIds:
                    description: Firewall IDs the server should be attached to on
                      creation.
                    items:
                      type: number
                    type: array
                  ignoreRemoteFirewallIds:
                    description: Ignores any updates to the firewall_ids argument
                      which were received from the server. This should not be used
                      in normal cases. See the documentation of the hcloud_firewall_attachment
                      resource for a reason to use this argument.
                    type: boolean
                  image:
                    description: Name or ID of the image the server is created from.
                      Note the image property is only required when using the resource
                      to create servers. Thus, users will get an error from the underlying
                      client library if they forget to set the property and try to
                      create a server.
                    type: string
                  iso:
                    description: ID or Name of an ISO image to mount.
                    type: string
                  keepDisk:
                    description: If true, do not upgrade the disk. This allows downgrading
                      the server type later.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels (key-value pairs) should be created
                      with.
                    type: object
                  location:
                    description: The location name to create the server in. nbg1,
                      fsn1, hel1, ash or hil
                    type: string
                  name:
                    description: Name of the server to create (must be unique per
                      project and a valid hostname as per RFC 1123).
                    type: string
                  network:
                    description: Network the server should be attached to on creation.
                      (Can be specified multiple times)
                    items:
                      properties:
                        aliasIps:
                          description: Alias IPs the server should have in the Network.
                          items:
                            type: string
                          type: array
                        ip:
                          description: Specify the IP the server should get in the
                            network
                          type: string
                        networkId:
                          description: ID of the network
                          type: number
                      type: object
                    type: array
                  placementGroupId:
                    description: Placement Group ID the server added to on creation.
                    type: number
                  publicNet:
                    description: In this block you can either enable / disable ipv4
                      and ipv6 or link existing primary IPs (checkout the examples).
                      If this block is not defined, two primary (ipv4 & ipv6) ips
                      getting auto generated.
                    items:
                      properties:
                        ipv4:
                          type: number
                        ipv4Enabled:
                          type: boolean
                        ipv6:
                          type: number
                        ipv6Enabled:
                          type: boolean
                      type: object
                    type: array
                  rebuildProtection:
                    description: Enable or disable rebuild protection (Needs to be
                      the same as delete_protection).
                    type: boolean
                  rescue:
                    description: Enable and boot in to the specified rescue system.
                      This enables simple installation of custom operating systems.
                      linux64 or linux32
                    type: string
                  serverType:
                    description: Name of the server type this server should be created
                      with.
                    type: string
                  shutdownBeforeDeletion:
                    description: (bool) Whether to try shutting the server down gracefully
                      before deleting it.
                    type: boolean
                  sshKeys:
                    description: SSH key IDs or names which should be injected into
                      the server at creation time. Once the server is created, you
                      can not update the list of SSH Keys. If you do change this,
                      you will be prompted to destroy and recreate the server. You
                      can avoid this by setting lifecycle.ignore_changes to [ ssh_keys
                      ].
                    items:
                      type: string
                    type: array
                  userData:
                    description: Cloud-Init user data to use during server creation
                    type: string
                type: object
              initProvider:
                description: THIS IS A BETA FIELD. It will be honored unless the Management
                  Policies feature flag is disabled. InitProvider holds the same fields
                  as ForProvider, with the exception of Identifier and other resource
                  reference fields. The fields that are in InitProvider are merged
                  into ForProvider when the resource is created. The same fields are
                  also added to the terraform ignore_changes hook, to avoid updating
                  them after creation. This is useful for fields that are required
                  on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them,
                  like an autoscaler.
                properties:
                  allowDeprecatedImages:
                    description: 'Enable the use of deprecated images (default: false).
                      Note Deprecated images will be removed after three months. Using
                      them is then no longer possible.'
                    type: boolean
                  backups:
                    description: Enable or disable backups.
                    type: boolean
                  datacenter:
                    description: The datacenter name to create the server in. nbg1-dc3,
                      fsn1-dc14, hel1-dc2, ash-dc1 or hil-dc1
                    type: string
                  deleteProtection:
                    description: Enable or disable delete protection (Needs to be
                      the same as rebuild_protection).
                    type: boolean
                  firewallIds:
                    description: Firewall IDs the server should be attached to on
                      creation.
                    items:
                      type: number
                    type: array
                  ignoreRemoteFirewallIds:
                    description: Ignores any updates to the firewall_ids argument
                      which were received from the server. This should not be used
                      in normal cases. See the documentation of the hcloud_firewall_attachment
                      resource for a reason to use this argument.
                    type: boolean
                  image:
                    description: Name or ID of the image the server is created from.
                      Note the image property is only required when using the resource
                      to create servers. Thus, users will get an error from the underlying
                      client library if they forget to set the property and try to
                      create a server.
                    type: string
                  iso:
                    description: ID or Name of an ISO image to mount.
                    type: string
                  keepDisk:
                    description: If true, do not upgrade the disk. This allows downgrading
                      the server type later.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels (key-value pairs) should be created
                      with.
                    type: object
                  location:
                    description: The location name to create the server in. nbg1,
                      fsn1, hel1, ash or hil
                    type: string
                  name:
                    description: Name of the server to create (must be unique per
                      project and a valid hostname as per RFC 1123).
                    type: string
                  network:
                    description: Network the server should be attached to on creation.
                      (Can be specified multiple times)
                    items:
                      properties:
                        aliasIps:
                          description: Alias IPs the server should have in the Network.
                          items:
                            type: string
                          type: array
                        ip:
                          description: Specify the IP the server should get in the
                            network
                          type: string
                        networkId:
                          description: ID of the network
                          type: number
                      type: object
                    type: array
                  placementGroupId:
                    description: Placement Group ID the server added to on creation.
                    type: number
                  publicNet:
                    description: In this block you can either enable / disable ipv4
                      and ipv6 or link existing primary IPs (checkout the examples).
                      If this block is not defined, two primary (ipv4 & ipv6) ips
                      getting auto generated.
                    items:
                      properties:
                        ipv4:
                          type: number
                        ipv4Enabled:
                          type: boolean
                        ipv6:
                          type: number
                        ipv6Enabled:
                          type: boolean
                      type: object
                    type: array
                  rebuildProtection:
                    description: Enable or disable rebuild protection (Needs to be
                      the same as delete_protection).
                    type: boolean
                  rescue:
                    description: Enable and boot in to the specified rescue system.
                      This enables simple installation of custom operating systems.
                      linux64 or linux32
                    type: string
                  serverType:
                    description: Name of the server type this server should be created
                      with.
                    type: string
                  shutdownBeforeDeletion:
                    description: (bool) Whether to try shutting the server down gracefully
                      before deleting it.
                    type: boolean
                  sshKeys:
                    description: SSH key IDs or names which should be injected into
                      the server at creation time. Once the server is created, you
                      can not update the list of SSH Keys. If you do change this,
                      you will be prompted to destroy and recreate the server. You
                      can avoid this by setting lifecycle.ignore_changes to [ ssh_keys
                      ].
                    items:
                      type: string
                    type: array
                  userData:
                    description: Cloud-Init user data to use during server creation
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS A BETA FIELD. It is on by default but can be
                  opted out through a Crossplane feature flag. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.serverType is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.serverType)
                || (has(self.initProvider) && has(self.initProvider.serverType))'
          status:
            description: ServerStatus defines the observed state of Server.
            properties:
              atProvider:
                properties:
                  allowDeprecatedImages:
                    description: 'Enable the use of deprecated images (default: false).
                      Note Deprecated images will be removed after three months. Using
                      them is then no longer possible.'
                    type: boolean
                  backupWindow:
                    description: (string) The backup window of the server, if enabled.
                    type: string
                  backups:
                    description: Enable or disable backups.
                    type: boolean
                  datacenter:
                    description: The datacenter name to create the server in. nbg1-dc3,
                      fsn1-dc14, hel1-dc2, ash-dc1 or hil-dc1
                    type: string
                  deleteProtection:
                    description: Enable or disable delete protection (Needs to be
                      the same as rebuild_protection).
                    type: boolean
                  firewallIds:
                    description: Firewall IDs the server should be attached to on
                      creation.
                    items:
                      type: number
                    type: array
                  id:
                    description: (int) Unique ID of the server.
                    type: string
                  ignoreRemoteFirewallIds:
                    description: Ignores any updates to the firewall_ids argument
                      which were received from the server. This should not be used
                      in normal cases. See the documentation of the hcloud_firewall_attachment
                      resource for a reason to use this argument.
                    type: boolean
                  image:
                    description: Name or ID of the image the server is created from.
                      Note the image property is only required when using the resource
                      to create servers. Thus, users will get an error from the underlying
                      client library if they forget to set the property and try to
                      create a server.
                    type: string
                  ipv4Address:
                    description: (string) The IPv4 address.
                    type: string
                  ipv6Address:
                    description: (string) The first IPv6 address of the assigned network.
                    type: string
                  ipv6Network:
                    description: (string) The IPv6 network.
                    type: string
                  iso:
                    description: ID or Name of an ISO image to mount.
                    type: string
                  keepDisk:
                    description: If true, do not upgrade the disk. This allows downgrading
                      the server type later.
                    type: boolean
                  labels:
                    additionalProperties:
                      type: string
                    description: User-defined labels (key-value pairs) should be created
                      with.
                    type: object
                  location:
                    description: The location name to create the server in. nbg1,
                      fsn1, hel1, ash or hil
                    type: string
                  name:
                    description: Name of the server to create (must be unique per
                      project and a valid hostname as per RFC 1123).
                    type: string
                  network:
                    description: Network the server should be attached to on creation.
                      (Can be specified multiple times)
                    items:
                      properties:
                        aliasIps:
                          description: Alias IPs the server should have in the Network.
                          items:
                            type: string
                          type: array
                        ip:
                          description: Specify the IP the server should get in the
                            network
                          type: string
                        macAddress:
                          description: The MAC address the private interface of the
                            server has
                          type: string
                        networkId:
                          description: ID of the network
                          type: number
                      type: object
                    type: array
                  placementGroupId:
                    description: Placement Group ID the server added to on creation.
                    type: number
                  publicNet:
                    description: In this block you can either enable / disable ipv4
                      and ipv6 or link existing primary IPs (checkout the examples).
                      If this block is not defined, two primary (ipv4 & ipv6) ips
                      getting auto generated.
                    items:
                      properties:
                        ipv4:
                          type: number
                        ipv4Enabled:
                          type: boolean
                        ipv6:
                          type: number
                        ipv6Enabled:
                          type: boolean
                      type: object
                    type: array
                  rebuildProtection:
                    description: Enable or disable rebuild protection (Needs to be
                      the same as delete_protection).
                    type: boolean
                  rescue:
                    description: Enable and boot in to the specified rescue system.
                      This enables simple installation of custom operating systems.
                      linux64 or linux32
                    type: string
                  serverType:
                    description: Name of the server type this server should be created
                      with.
                    type: string
                  shutdownBeforeDeletion:
                    description: (bool) Whether to try shutting the server down gracefully
                      before deleting it.
                    type: boolean
                  sshKeys:
                    description: SSH key IDs or names which should be injected into
                      the server at creation time. Once the server is created, you
                      can not update the list of SSH Keys. If you do change this,
                      you will be prompted to destroy and recreate the server. You
                      can avoid this by setting lifecycle.ignore_changes to [ ssh_keys
                      ].
                    items:
                      type: string
                    type: array
                  status:
                    description: (string) The status of the server.
                    type: string
                  userData:
                    description: Cloud-Init user data to use during server creation
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
